#                          The CellCognition Project
#                    Copyright (c) 2006 - 2011 Michael Held
#                     Gerlich Lab, ETH Zurich, Switzerland
#                             www.cellcognition.org
#
#             CellCognition is distributed under the LGPL License.
#                       See trunk/LICENSE.txt for details.
#                See trunk/AUTHORS.txt for author contributions.

# Definition of naming schemas for the import of TIFF stacks.
# Each section defines one import schema displayed in the CecogAnalyzer
# GUI in the "General" section

# Parameters are:
#   file_extensions = .tiff .tif
#    - a list of file extensions separated by whitespace(s)
#    - example: take all files with .tif or .tiff extension
#
#   regex_subdirectories = ^[^_].*
#    - a filter rule for any sub-directory from which images should be imported
#    - is a regular expression which must be found via re.search()
#    - can be empty, in that case all directories are taken
#    - example: ignore all directories with a leading underscore
#
#   regex_filename_substr = (.+?)\.
#    - defines a part of the relative filename in which the dimension definition
#      will be searched
#    - is a regular expression which is searched and must define a group via ()
#    - can be empty, in that case the entire filename is considered
#    - example: take sub-string till the first dot
#
#   regex_dimensions = P(?P<position>.+?)_+?T(?P<time>\d+)_+?C(?P<channel>.+?)_+?Z(?P<zslice>\d+)
#    - defines how the dimensions 'position', 'time', 'channel', and 'zslice' are
#      extracted from the sub-string of the relative filename (see above)
#    - is a regular expression with named groups which is searched
#    - time, channel, and zslice are optional and default to 0, w1, 0
#    - time and zslice MUST be digits!
#    - example: defines position, time, channel, and zslice with tokens separated
#               by at least one underscore, e.g. will find
#               abcd_P0023_T00001_Cgfp_Z1_efg
#
#   timestamps_from_file = mtime
#    - decide if the timestamp information is taken from the file directly
#    - valid values are:
#          * mtime - file modification time
#          * ctime - file creation time
#    - any other value (or omitting the parameter) will disable the timestamp
#      extraction from file
#    - NOTE: using timestamps from files can be dangerous, because the
#            information can be lost during file copy. nevertheless this is for
#            TIFF stacks often the only source of this information.
#
#   reformat_well = True
#    - boolean value defining whether the well information is reformatted to the
#      canonical form "[A-Z]\d{2}"
#    - default: True
#    - example: a1 -> A01
#               P5 -> P05
#
#
# See the IniFileImporter in https://github.com/CellCognition/cecog/blob/master/cecog/io/importer.py
# See http://docs.python.org/library/re.html for help with regular expressions


[PlateScanPackage_wellbased]
file_extensions = .tiff .tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = (?P<well>[A-Z]\d+)__S(?P<subwell>\d+)__.+?__T(?P<time>\d+)__C(?P<channel>.+?)__Z(?P<zslice>\d+)
timestamps_from_file = mtime

[MetaMorph]
file_extensions = .tiff .tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = TimePoint_(?P<time>\d+)\S*_(?P<well>[A-Z\d]{3})(_s(?P<subwell>\d))*_w(?P<channel>\d)(?!_(T|t)humb)
timestamps_from_file = mtime

[MetaMorph_zslice]
file_extensions = .tiff .tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = TimePoint_(?P<time>\d+)\S*_(?P<well>[A-Z\d]{3})(_s(?P<subwell>\d))*_w(?P<zslice>\d)(?!_(T|t)humb)
timestamps_from_file = mtime

[MetaMorph_wellbased]
file_extensions = .tiff .tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = (?P<well>[A-Z\d]{3})__S(?P<subwell>\d+)__T(?P<time>\d+)__C(?P<channel>.+?)__Z(?P<zslice>\d+)_+\d
timestamps_from_file = mtime

[Micronaut]
file_extensions = .tif .lsm
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = ^.*?__+?W(?P<well>\d+)__+?P(?P<subwell>\d+)__+?T(?P<time>\d+)__+?C(?P<channel>.+?)__+?Z(?P<zslice>\d+)
timestamps_from_file = mtime

[PlateScanPackage]
file_extensions = .tiff .tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = P(?P<position>\d+)_+?T(?P<time>\d+)_+?C(?P<channel>.+?)_+?Z(?P<zslice>\d+)
timestamps_from_file = mtime

[PlateScanPackage2]
file_extensions = .tiff .tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = P(?P<position>\d+)_+?C(?P<channel>.+?)_+?T(?P<time>\d+)
timestamps_from_file = mtime

[MITOCHECK]
# --W00352--P00001--T02760--TR02869--SL00001--O01--Q01--F06--A01--C00--L00--PL04--I0020.tif
file_extensions = .tiff .tif .png
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?\.)
regex_dimensions = .*?--W(?P<well>\d+)--P(?P<subwell>\d+)--T(?P<time>\d+)--.*?--C(?P<channel>.+?)--.*
timestamps_from_file = mtime
use_frame_indices = True
# allow_subfolder = data

[ETH_Fabrice]
file_extensions = .tiff .tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = P(?P<position>\d+)_+?Z(?P<zslice>\d+)
timestamps_from_file = mtime

[ETH_Peter]
file_extensions = .tiff .tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = .+?_(?P<well>[A-Za-z]\d{1,2})_(?P<subwell>\d+)_w(?P<channel>\d)
timestamps_from_file = mtime

[EMBL_ScanR]
file_extensions = .tiff .tif
regex_subdirectories = (?P<position>.+?)__(?P<well>[A-Za-z]\d{1,2})__S(?P<subwell>\d+)
regex_filename_substr = (.+?\.)
regex_dimensions = Z(?P<zslice>\d+)--T(?P<time>\d+)--(?P<channel>.+?)\.
timestamps_from_file = mtime

[EMBL_ScanR_wellbased]
# ignore the position information and use well and subwell
file_extensions = .tiff .tif
regex_subdirectories = ^.+?__(?P<well>[A-Za-z]\d{1,2})__S(?P<subwell>\d+)
regex_filename_substr = (.+?\.)
regex_dimensions = (?P<well>[A-Za-z]\d{1,2})--.+?--P(?P<subwell>\d+)--Z(?P<zslice>\d+)--T(?P<time>\d+)--(?P<channel>.+?)\.
timestamps_from_file = mtime
allow_subfolder = data

[EMBL_ScanR_wellbased]
# ignore the position information and use well and subwell
file_extensions = .tiff .tif
regex_subdirectories = ^.+?__(?P<well>[A-Za-z]\d{1,2})__S(?P<subwell>\d+)
regex_filename_substr = (.+?\.)
regex_dimensions = (?P<well>[A-Za-z]\d{1,2})--.+?--P(?P<subwell>\d+)--Z(?P<zslice>\d+)--T(?P<time>\d+)--(?P<channel>.+?)\.
timestamps_from_file = mtime
allow_subfolder = data

[EMBL_ScanR_OME_WPZTC]
file_extensions = .tiff .tif .ome.tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?\.)
regex_dimensions = .*?--W(?P<well>\d+)--P(?P<subwell>\d+)--Z(?P<zslice>\d+)--T(?P<time>\d+)--(?P<channel>.+?)\.
timestamps_from_file = mtime
allow_subfolder = data

[EMBL_ScanR_well_subfolder]
file_extensions = .tiff .tif
regex_subdirectories = ^(?P<well>[A-Za-z]\d{1,2})$
regex_filename_substr = (.+?\.)
regex_dimensions = .*?--W(?P<well>\d+)--P(?P<subwell>\d+)--Z(?P<zslice>\d+)--T(?P<time>\d+)--(?P<channel>.+?)\.
timestamps_from_file = mtime
allow_subfolder = data

[Alice]
# Exp-W00352--P00001--t02760--c00.tif
file_extensions = .tiff .tif .png
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?\.)
regex_dimensions = .*?--W(?P<well>\d+)--P(?P<subwell>\d+)_t(?P<time>\d+)_c(?P<channel>.+?)\.
timestamps_from_file = mtime
# allow_subfolder = data

[ZACK]
file_extensions = .tiff .tif
regex_subdirectories = ^[^_].*
regex_filename_substr = (.+?)\.
regex_dimensions = (?P<well>\w\W*\d+)\W*fld\W*(?P<subwell>\d+)\swv\s(?P<channel>\w+)
timestamps_from_file = mtime

