"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""

from setuptools import setup
import shutil
import os
import sys
from pdk.fileutils import safe_mkdirs, collect_files

def tempsyspath(path):
    def decorate(f):
        def handler():
            sys.path.insert(0, path)
            value = f()
            del sys.path[0]
            return value
        return handler
    return decorate

def read_pkginfo_file(setup_file):
    path = os.path.dirname(setup_file)
    @tempsyspath(path)
    def _import_pkginfo_file():
        if '__pgkinfo__' in sys.modules:
            del sys.modules['__pkginfo__']
        return __import__('__pkginfo__')
    return _import_pkginfo_file()

pkginfo = read_pkginfo_file(__file__)

APP = ['CecogBrowser.py']
DATA_FILES = []
OPTIONS = {'argv_emulation': True,
           'includes': ['sip'],
           'packages': ['pyvigra'],
           'iconfile': 'resources/cecog_browser_icon.icns', 
           }

# delete target folder before execution of py2app 
base_path = 'dist/CecogBrowser.app' 
if os.path.isdir(base_path):
    shutil.rmtree(base_path)

setup(
    app=APP,
    data_files=DATA_FILES,
    options={'py2app': OPTIONS},
    setup_requires=['py2app'],
    name=pkginfo.name,
    version=pkginfo.version,
    author=pkginfo.author,
    author_email=pkginfo.author_email,
    license=pkginfo.license,
    description=pkginfo.description,
    long_description=pkginfo.long_description,
    url=pkginfo.url,
    download_url=pkginfo.download_url,
    classifiers=pkginfo.classifiers,
#    package_dir=pkginfo.package_dir,
#    packages=pkginfo.packages,
    platforms=pkginfo.platforms,
    provides=pkginfo.provides,
)


# for unknown reasons the pyconfig.h is needed but not included
target_path = os.path.join(base_path, 'Contents/Resources/include/python2.6')
safe_mkdirs(target_path)
shutil.copy('/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6/pyconfig.h',
            target_path)

# delete all stupid Qt4 debug files (~130MB!!!)
target_path = os.path.join(base_path, 'Contents/Frameworks')
filenames = collect_files(target_path, [], absolute=True, recursive=True)
filenames = [x for x in filenames if 'debug' in os.path.split(x)[1]]
for filename in filenames:
    if os.path.isdir(filename):
        shutil.rmtree(filename)
    elif os.path.isfile(filename):
        os.remove(filename)
        
# copy the pyvigra dylibs into the right place        
DYLIBS = ['libboost_python.dylib',
          'libvigraimpex.dylib']        
for filename in DYLIBS:
    target = os.path.join(base_path, 
                          'Contents/Frameworks',
                          filename)
    if os.path.isfile(target):
        os.remove(target)
    shutil.move(os.path.join(base_path, 
                             'Contents/Resources/lib/python2.6/pyvigra',
                             filename),
                os.path.join(base_path, 
                             'Contents/Frameworks'))

## delete ALL .py files from lib (and use .pyc instead)
#target = os.path.join(base_path, 'Contents/Resources/lib')
#for filename in collect_files(target_path, ['.py'], 
#                              absolute=True, recursive=True):
#    os.remove(filename)
                           